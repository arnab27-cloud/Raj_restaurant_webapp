{"ast":null,"code":"import{createContext,useContext,useState}from'react';// Create the context object\nimport{jsx as _jsx}from\"react/jsx-runtime\";const BookingContext=/*#__PURE__*/createContext();// Provider component that wraps your app\nexport const BookingProvider=_ref=>{let{children}=_ref;const[bookings,setBookings]=useState([]);// Room bookings\nconst[tables,setTables]=useState([]);// Table bookings\nconst[cart,setCart]=useState([]);// Food cart items\n// -------------------- ROOM BOOKINGS --------------------\nconst addBooking=data=>{setBookings(prev=>[...prev,data]);};const removeBooking=id=>{setBookings(prev=>prev.filter(b=>b.id!==id));};const clearBookings=()=>{setBookings([]);};// -------------------- TABLE BOOKINGS --------------------\nconst addTableBooking=table=>{// Check for duplicate table booking based on date & time\nconst isDuplicate=tables.some(t=>t.tableNumber===table.tableNumber&&t.date===table.date&&t.time===table.time);if(isDuplicate||tables.length>=10)return false;setTables(prev=>[...prev,table]);return true;};const removeTableBooking=id=>{setTables(prev=>prev.filter(t=>t.id!==id));};const clearTableBookings=()=>{setTables([]);};// -------------------- CART --------------------\nconst clearCart=()=>{setCart([]);};return/*#__PURE__*/_jsx(BookingContext.Provider,{value:{bookings,addBooking,removeBooking,clearBookings,tables,addTableBooking,removeTableBooking,clearTableBookings,cart,setCart,clearCart},children:children});};// ✅ Custom hook to access the booking context\nexport const useBooking=()=>useContext(BookingContext);","map":{"version":3,"names":["createContext","useContext","useState","jsx","_jsx","BookingContext","BookingProvider","_ref","children","bookings","setBookings","tables","setTables","cart","setCart","addBooking","data","prev","removeBooking","id","filter","b","clearBookings","addTableBooking","table","isDuplicate","some","t","tableNumber","date","time","length","removeTableBooking","clearTableBookings","clearCart","Provider","value","useBooking"],"sources":["C:/Users/arnab/OneDrive/Documents/GitHub/Raj_restaurant_webapp/client/src/context/BookingContext.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\n// Create the context object\r\nconst BookingContext = createContext();\r\n\r\n// Provider component that wraps your app\r\nexport const BookingProvider = ({ children }) => {\r\n  const [bookings, setBookings] = useState([]);      // Room bookings\r\n  const [tables, setTables] = useState([]);          // Table bookings\r\n  const [cart, setCart] = useState([]);              // Food cart items\r\n\r\n  // -------------------- ROOM BOOKINGS --------------------\r\n  const addBooking = (data) => {\r\n    setBookings((prev) => [...prev, data]);\r\n  };\r\n\r\n  const removeBooking = (id) => {\r\n    setBookings((prev) => prev.filter((b) => b.id !== id));\r\n  };\r\n\r\n  const clearBookings = () => {\r\n    setBookings([]);\r\n  };\r\n\r\n  // -------------------- TABLE BOOKINGS --------------------\r\n  const addTableBooking = (table) => {\r\n    // Check for duplicate table booking based on date & time\r\n    const isDuplicate = tables.some(\r\n      (t) =>\r\n        t.tableNumber === table.tableNumber &&\r\n        t.date === table.date &&\r\n        t.time === table.time\r\n    );\r\n    if (isDuplicate || tables.length >= 10) return false;\r\n\r\n    setTables((prev) => [...prev, table]);\r\n    return true;\r\n  };\r\n\r\n  const removeTableBooking = (id) => {\r\n    setTables((prev) => prev.filter((t) => t.id !== id));\r\n  };\r\n\r\n  const clearTableBookings = () => {\r\n    setTables([]);\r\n  };\r\n\r\n  // -------------------- CART --------------------\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  return (\r\n    <BookingContext.Provider\r\n      value={{\r\n        bookings,\r\n        addBooking,\r\n        removeBooking,\r\n        clearBookings,\r\n        tables,\r\n        addTableBooking,\r\n        removeTableBooking,\r\n        clearTableBookings,\r\n        cart,\r\n        setCart,\r\n        clearCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </BookingContext.Provider>\r\n  );\r\n};\r\n\r\n// ✅ Custom hook to access the booking context\r\nexport const useBooking = () => useContext(BookingContext);"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAE3D;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,cAAc,cAAGL,aAAa,CAAC,CAAC,CAEtC;AACA,MAAO,MAAM,CAAAM,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1C,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAAO;AACnD,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAAW;AACnD,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAe;AAEnD;AACA,KAAM,CAAAa,UAAU,CAAIC,IAAI,EAAK,CAC3BN,WAAW,CAAEO,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAED,IAAI,CAAC,CAAC,CACxC,CAAC,CAED,KAAM,CAAAE,aAAa,CAAIC,EAAE,EAAK,CAC5BT,WAAW,CAAEO,IAAI,EAAKA,IAAI,CAACG,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAACF,EAAE,GAAKA,EAAE,CAAC,CAAC,CACxD,CAAC,CAED,KAAM,CAAAG,aAAa,CAAGA,CAAA,GAAM,CAC1BZ,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,CAED;AACA,KAAM,CAAAa,eAAe,CAAIC,KAAK,EAAK,CACjC;AACA,KAAM,CAAAC,WAAW,CAAGd,MAAM,CAACe,IAAI,CAC5BC,CAAC,EACAA,CAAC,CAACC,WAAW,GAAKJ,KAAK,CAACI,WAAW,EACnCD,CAAC,CAACE,IAAI,GAAKL,KAAK,CAACK,IAAI,EACrBF,CAAC,CAACG,IAAI,GAAKN,KAAK,CAACM,IACrB,CAAC,CACD,GAAIL,WAAW,EAAId,MAAM,CAACoB,MAAM,EAAI,EAAE,CAAE,MAAO,MAAK,CAEpDnB,SAAS,CAAEK,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAEO,KAAK,CAAC,CAAC,CACrC,MAAO,KAAI,CACb,CAAC,CAED,KAAM,CAAAQ,kBAAkB,CAAIb,EAAE,EAAK,CACjCP,SAAS,CAAEK,IAAI,EAAKA,IAAI,CAACG,MAAM,CAAEO,CAAC,EAAKA,CAAC,CAACR,EAAE,GAAKA,EAAE,CAAC,CAAC,CACtD,CAAC,CAED,KAAM,CAAAc,kBAAkB,CAAGA,CAAA,GAAM,CAC/BrB,SAAS,CAAC,EAAE,CAAC,CACf,CAAC,CAED;AACA,KAAM,CAAAsB,SAAS,CAAGA,CAAA,GAAM,CACtBpB,OAAO,CAAC,EAAE,CAAC,CACb,CAAC,CAED,mBACEV,IAAA,CAACC,cAAc,CAAC8B,QAAQ,EACtBC,KAAK,CAAE,CACL3B,QAAQ,CACRM,UAAU,CACVG,aAAa,CACbI,aAAa,CACbX,MAAM,CACNY,eAAe,CACfS,kBAAkB,CAClBC,kBAAkB,CAClBpB,IAAI,CACJC,OAAO,CACPoB,SACF,CAAE,CAAA1B,QAAA,CAEDA,QAAQ,CACc,CAAC,CAE9B,CAAC,CAED;AACA,MAAO,MAAM,CAAA6B,UAAU,CAAGA,CAAA,GAAMpC,UAAU,CAACI,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}