{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{GoogleMap,Marker,useLoadScript}from'@react-google-maps/api';import Modal from'@mui/material/Modal';import{Autocomplete}from'@react-google-maps/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const libraries=['places'];const mapContainerStyle={width:'100%',height:'400px'};const defaultCenter={lat:22.5726,lng:88.3639};// Kolkata\nexport default function AddressPickerModal(_ref){let{open,onClose,onSelectAddress,selectedAddress}=_ref;const{isLoaded,loadError}=useLoadScript({googleMapsApiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY,libraries});const[marker,setMarker]=useState(null);const[mapCenter,setMapCenter]=useState(defaultCenter);const[inputValue,setInputValue]=useState(selectedAddress||'');const autocompleteRef=React.useRef(null);useEffect(()=>{var _window$google,_window$google$maps;if(selectedAddress&&(_window$google=window.google)!==null&&_window$google!==void 0&&(_window$google$maps=_window$google.maps)!==null&&_window$google$maps!==void 0&&_window$google$maps.Geocoder){const geocoder=new window.google.maps.Geocoder();geocoder.geocode({address:selectedAddress},(results,status)=>{if(status==='OK'&&results[0]){const location=results[0].geometry.location;const latLng={lat:location.lat(),lng:location.lng()};setMapCenter(latLng);setMarker(latLng);}});}},[selectedAddress]);const handleMapClick=useCallback(event=>{const latLng={lat:event.latLng.lat(),lng:event.latLng.lng()};setMarker(latLng);const geocoder=new window.google.maps.Geocoder();geocoder.geocode({location:latLng},(results,status)=>{if(status==='OK'&&results[0]){onSelectAddress(results[0].formatted_address);setInputValue(results[0].formatted_address);onClose();}});},[onClose,onSelectAddress]);const handlePlaceChanged=()=>{var _place$geometry;const place=autocompleteRef.current.getPlace();if(place!==null&&place!==void 0&&(_place$geometry=place.geometry)!==null&&_place$geometry!==void 0&&_place$geometry.location&&place!==null&&place!==void 0&&place.formatted_address){const location=place.geometry.location;const latLng={lat:location.lat(),lng:location.lng()};setMarker(latLng);setMapCenter(latLng);onSelectAddress(place.formatted_address);setInputValue(place.formatted_address);onClose();}};if(loadError)return/*#__PURE__*/_jsx(\"div\",{children:\"Error loading map\"});if(!isLoaded)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading map...\"});return/*#__PURE__*/_jsx(Modal,{open:open,onClose:onClose,children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:20,background:'white',margin:'5% auto',maxWidth:800},children:[/*#__PURE__*/_jsx(Autocomplete,{onLoad:autocomplete=>autocompleteRef.current=autocomplete,onPlaceChanged:handlePlaceChanged,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:e=>setInputValue(e.target.value),placeholder:\"Search your address\",style:{marginBottom:'12px',width:'100%',padding:'8px',borderRadius:'6px',border:'1px solid #ccc',boxShadow:'0 0 0 1px #ccc'}})}),/*#__PURE__*/_jsx(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:14,center:mapCenter,onClick:handleMapClick,children:marker&&/*#__PURE__*/_jsx(Marker,{position:marker})})]})});}","map":{"version":3,"names":["React","useEffect","useState","useCallback","GoogleMap","Marker","useLoadScript","Modal","Autocomplete","jsx","_jsx","jsxs","_jsxs","libraries","mapContainerStyle","width","height","defaultCenter","lat","lng","AddressPickerModal","_ref","open","onClose","onSelectAddress","selectedAddress","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","marker","setMarker","mapCenter","setMapCenter","inputValue","setInputValue","autocompleteRef","useRef","_window$google","_window$google$maps","window","google","maps","Geocoder","geocoder","geocode","address","results","status","location","geometry","latLng","handleMapClick","event","formatted_address","handlePlaceChanged","_place$geometry","place","current","getPlace","children","style","padding","background","margin","maxWidth","onLoad","autocomplete","onPlaceChanged","type","value","onChange","e","target","placeholder","marginBottom","borderRadius","border","boxShadow","zoom","center","onClick","position"],"sources":["C:/Users/arnab/OneDrive/Documents/GitHub/Raj_restaurant_webapp/client/src/components/AddressPickerModal.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Autocomplete } from '@react-google-maps/api';\r\n\r\nconst libraries = ['places'];\r\nconst mapContainerStyle = { width: '100%', height: '400px' };\r\nconst defaultCenter = { lat: 22.5726, lng: 88.3639 }; // Kolkata\r\n\r\nexport default function AddressPickerModal({\r\n  open,\r\n  onClose,\r\n  onSelectAddress,\r\n  selectedAddress,\r\n}) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [marker, setMarker] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState(defaultCenter);\r\n  const [inputValue, setInputValue] = useState(selectedAddress || '');\r\n  const autocompleteRef = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedAddress && window.google?.maps?.Geocoder) {\r\n      const geocoder = new window.google.maps.Geocoder();\r\n      geocoder.geocode({ address: selectedAddress }, (results, status) => {\r\n        if (status === 'OK' && results[0]) {\r\n          const location = results[0].geometry.location;\r\n          const latLng = {\r\n            lat: location.lat(),\r\n            lng: location.lng(),\r\n          };\r\n          setMapCenter(latLng);\r\n          setMarker(latLng);\r\n        }\r\n      });\r\n    }\r\n  }, [selectedAddress]);\r\n\r\n  const handleMapClick = useCallback(\r\n    (event) => {\r\n      const latLng = {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n      };\r\n      setMarker(latLng);\r\n      const geocoder = new window.google.maps.Geocoder();\r\n      geocoder.geocode({ location: latLng }, (results, status) => {\r\n        if (status === 'OK' && results[0]) {\r\n          onSelectAddress(results[0].formatted_address);\r\n          setInputValue(results[0].formatted_address);\r\n          onClose();\r\n        }\r\n      });\r\n    },\r\n    [onClose, onSelectAddress]\r\n  );\r\n\r\n  const handlePlaceChanged = () => {\r\n    const place = autocompleteRef.current.getPlace();\r\n    if (place?.geometry?.location && place?.formatted_address) {\r\n      const location = place.geometry.location;\r\n      const latLng = {\r\n        lat: location.lat(),\r\n        lng: location.lng(),\r\n      };\r\n      setMarker(latLng);\r\n      setMapCenter(latLng);\r\n      onSelectAddress(place.formatted_address);\r\n      setInputValue(place.formatted_address);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (loadError) return <div>Error loading map</div>;\r\n  if (!isLoaded) return <div>Loading map...</div>;\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <div style={{ padding: 20, background: 'white', margin: '5% auto', maxWidth: 800 }}>\r\n        <Autocomplete\r\n          onLoad={(autocomplete) => (autocompleteRef.current = autocomplete)}\r\n          onPlaceChanged={handlePlaceChanged}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            placeholder=\"Search your address\"\r\n            style={{\r\n              marginBottom: '12px',\r\n              width: '100%',\r\n              padding: '8px',\r\n              borderRadius: '6px',\r\n              border: '1px solid #ccc',\r\n              boxShadow: '0 0 0 1px #ccc',\r\n            }}\r\n          />\r\n        </Autocomplete>\r\n\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={14}\r\n          center={mapCenter}\r\n          onClick={handleMapClick}\r\n        >\r\n          {marker && <Marker position={marker} />}\r\n        </GoogleMap>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}