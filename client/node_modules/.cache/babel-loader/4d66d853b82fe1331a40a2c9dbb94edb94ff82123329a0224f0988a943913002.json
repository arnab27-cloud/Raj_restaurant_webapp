{"ast":null,"code":"import{createContext,useContext,useReducer,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();const cartReducer=(state,action)=>{switch(action.type){case'ADD':{const existingItem=state.find(item=>item.id===action.payload.id);if(existingItem){return state.map(item=>item.id===action.payload.id?{...item,quantity:action.payload.quantity}:item);}return[...state,{...action.payload}];}case'REMOVE':return state.filter(item=>item.id!==action.payload);case'DECREMENT':return state.map(item=>item.id===action.payload&&item.quantity>1?{...item,quantity:item.quantity-1}:item);case'INCREMENT':return state.map(item=>item.id===action.payload?{...item,quantity:item.quantity+1}:item);case'CLEAR':return[];default:return state;}};export const CartProvider=_ref=>{let{children}=_ref;const[cart,dispatch]=useReducer(cartReducer,[]);const[deliveryAddress,setDeliveryAddress]=useState('');// ðŸ“¥ Load saved address from localStorage\nuseEffect(()=>{const savedAddress=localStorage.getItem('deliveryAddress');if(savedAddress){setDeliveryAddress(savedAddress);}},[]);// ðŸ’¾ Save address to localStorage whenever it changes\nuseEffect(()=>{localStorage.setItem('deliveryAddress',deliveryAddress);},[deliveryAddress]);const addToCart=item=>dispatch({type:'ADD',payload:item});const removeFromCart=id=>dispatch({type:'REMOVE',payload:id});const decrementQty=id=>dispatch({type:'DECREMENT',payload:id});const incrementQty=id=>dispatch({type:'INCREMENT',payload:id});const clearCart=()=>dispatch({type:'CLEAR'});const cartTotal=cart.reduce((total,item)=>total+item.price*item.quantity,0);return/*#__PURE__*/_jsx(CartContext.Provider,{value:{cart,addToCart,removeFromCart,decrementQty,incrementQty,clearCart,cartTotal,deliveryAddress,setDeliveryAddress},children:children});};export const useCart=()=>useContext(CartContext);","map":{"version":3,"names":["createContext","useContext","useReducer","useState","useEffect","jsx","_jsx","CartContext","cartReducer","state","action","type","existingItem","find","item","id","payload","map","quantity","filter","CartProvider","_ref","children","cart","dispatch","deliveryAddress","setDeliveryAddress","savedAddress","localStorage","getItem","setItem","addToCart","removeFromCart","decrementQty","incrementQty","clearCart","cartTotal","reduce","total","price","Provider","value","useCart"],"sources":["C:/Users/arnab/OneDrive/Documents/GitHub/Raj_restaurant_webapp/client/src/context/CartContext.js"],"sourcesContent":["import {\r\n  createContext,\r\n  useContext,\r\n  useReducer,\r\n  useState,\r\n  useEffect,\r\n} from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD': {\r\n      const existingItem = state.find(item => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        return state.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: action.payload.quantity }\r\n            : item\r\n        );\r\n      }\r\n      return [...state, { ...action.payload }];\r\n    }\r\n\r\n    case 'REMOVE':\r\n      return state.filter(item => item.id !== action.payload);\r\n\r\n    case 'DECREMENT':\r\n      return state.map(item =>\r\n        item.id === action.payload && item.quantity > 1\r\n          ? { ...item, quantity: item.quantity - 1 }\r\n          : item\r\n      );\r\n\r\n    case 'INCREMENT':\r\n      return state.map(item =>\r\n        item.id === action.payload\r\n          ? { ...item, quantity: item.quantity + 1 }\r\n          : item\r\n      );\r\n\r\n    case 'CLEAR':\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, dispatch] = useReducer(cartReducer, []);\r\n  const [deliveryAddress, setDeliveryAddress] = useState('');\r\n\r\n  // ðŸ“¥ Load saved address from localStorage\r\n  useEffect(() => {\r\n    const savedAddress = localStorage.getItem('deliveryAddress');\r\n    if (savedAddress) {\r\n      setDeliveryAddress(savedAddress);\r\n    }\r\n  }, []);\r\n\r\n  // ðŸ’¾ Save address to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('deliveryAddress', deliveryAddress);\r\n  }, [deliveryAddress]);\r\n\r\n  const addToCart = item => dispatch({ type: 'ADD', payload: item });\r\n  const removeFromCart = id => dispatch({ type: 'REMOVE', payload: id });\r\n  const decrementQty = id => dispatch({ type: 'DECREMENT', payload: id });\r\n  const incrementQty = id => dispatch({ type: 'INCREMENT', payload: id });\r\n  const clearCart = () => dispatch({ type: 'CLEAR' });\r\n\r\n  const cartTotal = cart.reduce(\r\n    (total, item) => total + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        decrementQty,\r\n        incrementQty,\r\n        clearCart,\r\n        cartTotal,\r\n        deliveryAddress,\r\n        setDeliveryAddress,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}